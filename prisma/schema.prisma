// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Store {
  id         String      @id @default(uuid())
  name       String
  userId     String
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  //relations
  sizes      Size[]      @relation("StoreToSize")
  billboards Billboard[] @relation("StoreToBillboard")
  categories Category[]
  colors     Color[]     @relation("StoreToColor")
}

model Billboard {
  id        String     @id @default(uuid())
  storeId   String
  store     Store      @relation("StoreToBillboard", fields: [storeId], references: [id])
  label     String
  imageUrl  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Category  Category[]

  @@index([storeId])
}

model Category {
  id        String   @id @default(uuid())
  storeId   String
  store     Store    @relation(fields: [storeId], references: [id])
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  billboardId String
  billboard   Billboard @relation(fields: [billboardId], references: [id])

  @@index([storeId])
  @@index([billboardId])
}

model Size {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  storeId   String
  store     Store    @relation("StoreToSize", fields: [storeId], references: [id])
  value     String
  name      String

  @@index([storeId])
}

model Color {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  storeId   String
  store     Store    @relation("StoreToColor", fields: [storeId], references: [id])
  value     String
  name      String

  @@index([storeId])
}
